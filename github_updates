#!/usr/bin/env python3

import requests, sys, os, argparse, json;
from time import sleep;
from response_handler import ResponseHandler
from config_generator import ConfigGenerator

os.system('clear')

def check_config():
  req = requests.get("https://api.github.com/notifications", auth=(self.current_config.get('github_username'), self.current_config.get('github_bearer_token'))).json()


def config():
    ConfigGenerator()

def main():
  config = json.load(open('./config.json'))
  if any(value == '' for value in config.values()):
    ConfigGenerator()
  else:
    response = requests.get("https://api.github.com/notifications", auth=(config['github_username'], config['github_bearer_token'])).json()
    if isinstance(response, dict) and 'Bad credentials' in response.values():
      print("Wrong credentials, starting config.")
      sleep(1)
      ConfigGenerator()
    else:
      show_security_updates = config['max_nb_notifications'] == "Y"
      max_nb  = int(config['max_nb_notifications'])
      ResponseHandler(api_response = response, max_nb = max_nb, show_security_updates = show_security_updates)

if not len(sys.argv) > 1:
  if os.path.exists("config.json"):
    main()
  else:
    ConfigGenerator()
    main()
else:
  parser = argparse.ArgumentParser()
  parser.add_argument("-c", "--config", nargs='?', const=config(), help="Launch config",)
  args = parser.parse_args()
